name: Validate Kubernetes Configs

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
          
      - name: Install kubeval
        run: |
          wget https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
          tar xf kubeval-linux-amd64.tar.gz
          sudo mv kubeval /usr/local/bin

      - name: Kubernetes schema validation
        run: |
          echo "Validating Kubernetes manifest files..."
          # Standard manifest files
          kubeval --skip-kinds=CustomResourceDefinition k8s/standard/namespace.yaml
          kubeval --skip-kinds=CustomResourceDefinition k8s/standard/pvc.yaml
          kubeval --skip-kinds=CustomResourceDefinition k8s/standard/deployment.yaml
          kubeval --skip-kinds=CustomResourceDefinition k8s/standard/service.yaml
          kubeval --skip-kinds=CustomResourceDefinition k8s/standard/webui-deployment.yaml
          kubeval --skip-kinds=CustomResourceDefinition k8s/standard/webui-service.yaml
          # Codespaces manifest files
          kubeval --skip-kinds=CustomResourceDefinition k8s/codespaces/models-pvc.yaml
          kubeval --skip-kinds=CustomResourceDefinition k8s/codespaces/deployment.yaml
          kubeval --skip-kinds=CustomResourceDefinition k8s/codespaces/webui-deployment.yaml

      - name: Validate shell scripts
        run: |
          echo "Checking shell scripts for syntax errors..."
          chmod +x scripts/*.sh
          for script in scripts/*.sh; do
            bash -n "$script"
          done

      - name: Setup Kubernetes test cluster
        uses: nolar/setup-k3d-k3s@v1
        with:
          version: latest
          
      - name: Wait for k3d cluster to be ready
        run: |
          echo "Waiting for k3d cluster to be ready..."
          kubectl wait --for=condition=Ready nodes --all --timeout=60s
          kubectl get nodes

      - name: Test deployment (no pods will actually run)
        run: |
          echo "Testing deployment on k3d cluster..."
          kubectl apply -f k8s/standard/namespace.yaml
          kubectl apply -f k8s/standard/pvc.yaml || true  # PVC might fail in CI
          kubectl apply -f k8s/standard/service.yaml
          kubectl get namespace ollama
